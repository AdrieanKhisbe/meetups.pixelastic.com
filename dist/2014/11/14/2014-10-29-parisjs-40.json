{
  "id": "/2014/11/14/2014-10-29-parisjs-40",
  "title": "ParisJs 40",
  "url": "http://meetups.pixelastic.com//2014/11/14/2014-10-29-parisjs-40/",
  "tags": [
    "parisjs"
  ],
  "date": 1415969126,
  "html": "<p>Pour la 40e édition, c&#39;est Deezer qui nous a accueilli dans leurs très beaux\nlocaux. On sent une grande influence Spotify dans l&#39;organisation des équipes\n(grands open-spaces, dashboard de monitoring, salles de réunions funky et\nambiance décalée).</p>\n\n<p>On a parlé de CSS en Javascript, du marché de l&#39;emploi pour les devs, de\nbitcoin et d&#39;OAuth 2 dans le browser.</p>\n\n<h3>GSS, où le CSS rêvé par un dev JS</h3>\n\n<p>Khalid Jebbari nous à (longuement) parlé de CSS, et de ses déboires avec. Il\nest développeur Javascript et pour lui réussir à aligner des éléments de layout\nen CSS relève du calvaire. Tout lui semble contre-intuitif et bourré de hack\nà connaitre. Citation verbatim : &quot;C&#39;est pour ça que les gens détestent CSS\n: parce que ça marche jamais comme on veut&quot;.</p>\n\n<p>Il va sans dire que je suis contre ce postulat de base. CSS, comme tous les\nlangages de programmation, nécessite une phase d&#39;apprentissage pour en\ncomprendre les paradigmes. Une fois qu&#39;on a saisi les éléments de base, il\nsuffit de les assembler et de composer avec pour créer des layouts. Le langage\nest bien complexe à comprendre qu&#39;il n&#39;y parait initialement, et oui, il n&#39;est\npas parfait. Aligner deux blocs cote à cote pour qu&#39;ils partagent la même\nhauteur ou aligner un élément verticalement sont des choses qui paraissent\nbasiques mais qui sont complexes à faire. C&#39;est faisable, il faut apprendre\ncomment, mais ce n&#39;est pas évident.</p>\n\n<p>Khalid nous a donc ensuite présenté une solution à base de Javascript, pour\nécrire du CSS, nommée GSS. Celle-ci est fondée sur syntaxe du type prolog, pour\nfaire de la programmation logique.</p>\n\n<p>On définit en substance le résultat qu&#39;on souhaite obtenir : &quot;Je veux trois\ncolonnes, de largeur identiques, dont la hauteur soit égale à la plus grande\nhauteur des trois, avec un espace de 10px entre chaque&quot;. Ensuite, le système\nteste toutes les possibilités pour trouver un ensemble de valeurs qui match.</p>\n\n<p>Sous le capot, les éléments sont ensuite positionnées en <code>position:absolute</code> et\ntoute la partie calcul est reléguée au GPU. Dès qu&#39;une des contraintes change,\nalors tout est recalculé.</p>\n\n<p>C&#39;est une approche intéressante pour déclarer un layout, mais dans les faits\ntous les exemples qu&#39;il a résolu avec GSS pouvaient être résolu en CSS pur,\npour peu qu&#39;on maitrise assez le langage. En l&#39;état, une implémentation en\nJavascript de GSS dans le navigateur me parait bien trop peu performant\n(nombreux calculs, repaints et entremelage thread Javascript/GPU/rendering)\npour être utilisé en production.</p>\n\n<p>Au final, l&#39;idée est intéressante, et si cette syntaxe alternative était\npossible nativement, dans les browsers, elle pourrait être une alternative\nintéressante au CSS. Je doute qu&#39;elle soit réellement plus simple à apprendre\ncela-dit. En l&#39;état, sous forme de librairie externe, ça me semble surtout une\nsolution bancale à un faux problème.</p>\n\n<h3>Developers in tech</h3>\n\n<p>Jean-loup Karst, de breaz.io nous a parlé des technos les plus utilisées\naujourd&#39;hui par les startups parisiennes. Je vous renvoie au CR des HumanTalks\nd&#39;Octobre où il a donné sensiblement la même présentation.</p>\n\n<h3>Bitcoin in the browser</h3>\n\n<p>Excellet</p>\n\n<p>Bitcoin\nInternet contient du web, de smails, des ftp, etc. Les blockchain c&#39;est le même\nprincipes mais pour le moment on n&#39;a que de sbitcoins dessus. Ca permet de\nconstruire sdes sustemes décentralisés.\nGrosses problematiques de scurité, par reputation, etc.</p>\n\n<p>blockchain est une suite de sblocs. chaque bloc possede un hash de toutes les\ntransactions précédente. donc on peut pas changer la liste sans changer le hash\net donc invalider toute la suite. on regade le dernier block pour voir\nl&#39;historique</p>\n\n<p>wallet clé publique et clé privé\nclé public est comme un RIB, public, on peut la donner à tout le monde. On la\ndonne à tout le monde.\nclé privé permet d&#39;envoyer de l&#39;argent. ne jamais la partager et la cacher\ncontre tout</p>\n\n<p>actuelllement en CB, on autirise le commercan à prelever les sous. Avec\nbitcoin, on pousse des sous vers quelqu&#39;un d&#39;autres.</p>\n\n<p>les bitcoins sont immuales il appartiennent à quelqu&#39;un ou quelqu&#39;un d&#39;autres.\nComme des terrain, il n&#39;a pas bougé quand on le donne, mais il appartient\nà quelqu&#39;un d&#39;autre.\nSur une transaction, il y a un script avec un challenge à relever pour prouver\nque c&#39;est à moi. Pour prouver qu&#39;un bitcoin m&#39;appartient, y a deux choses\nà faire. On prouve qu&#39;on peut résoudre un challenge, et on rajoute un autre\nchallenge pour prouver qu&#39;il n&#39;ay que l&#39;autre personne qui peut les dépenser.\nOn utilise une clé privée pour sufner la transaction, les challenges.\nOn fait un challenge qui dit &quot;seulle la personne qui possède la clé privée qui\nconrrespond à cette clé publique peut le dépenser&quot;. Mais on peut faire tous les\nchallenges qu&#39;on veut (réputation, contrat à signer avec unfo, etc).</p>\n\n<p>aptget install bitcoin. Une journée pour synchroniser la blockahin du résearU.\nblockahin.info pour voir sur un UI l&#39;historique d&#39;une adresse bitcoin.</p>\n\n<p>lib nommée bitcore</p>\n\n<p>on demande une adresse au server node bitcoin.</p>\n",
  "markdown": "Pour la 40e édition, c'est Deezer qui nous a accueilli dans leurs très beaux\r\nlocaux. On sent une grande influence Spotify dans l'organisation des équipes\r\n(grands open-spaces, dashboard de monitoring, salles de réunions funky et\r\nambiance décalée).\r\n\r\nOn a parlé de CSS en Javascript, du marché de l'emploi pour les devs, de\r\nbitcoin et d'OAuth 2 dans le browser.\r\n\r\n### GSS, où le CSS rêvé par un dev JS\r\n\r\nKhalid Jebbari nous à (longuement) parlé de CSS, et de ses déboires avec. Il\r\nest développeur Javascript et pour lui réussir à aligner des éléments de layout\r\nen CSS relève du calvaire. Tout lui semble contre-intuitif et bourré de hack\r\nà connaitre. Citation verbatim : \"C'est pour ça que les gens détestent CSS\r\n: parce que ça marche jamais comme on veut\".\r\n\r\nIl va sans dire que je suis contre ce postulat de base. CSS, comme tous les\r\nlangages de programmation, nécessite une phase d'apprentissage pour en\r\ncomprendre les paradigmes. Une fois qu'on a saisi les éléments de base, il\r\nsuffit de les assembler et de composer avec pour créer des layouts. Le langage\r\nest bien complexe à comprendre qu'il n'y parait initialement, et oui, il n'est\r\npas parfait. Aligner deux blocs cote à cote pour qu'ils partagent la même\r\nhauteur ou aligner un élément verticalement sont des choses qui paraissent\r\nbasiques mais qui sont complexes à faire. C'est faisable, il faut apprendre\r\ncomment, mais ce n'est pas évident.\r\n\r\nKhalid nous a donc ensuite présenté une solution à base de Javascript, pour\r\nécrire du CSS, nommée GSS. Celle-ci est fondée sur syntaxe du type prolog, pour\r\nfaire de la programmation logique.\r\n\r\nOn définit en substance le résultat qu'on souhaite obtenir : \"Je veux trois\r\ncolonnes, de largeur identiques, dont la hauteur soit égale à la plus grande\r\nhauteur des trois, avec un espace de 10px entre chaque\". Ensuite, le système\r\nteste toutes les possibilités pour trouver un ensemble de valeurs qui match.\r\n\r\nSous le capot, les éléments sont ensuite positionnées en `position:absolute` et\r\ntoute la partie calcul est reléguée au GPU. Dès qu'une des contraintes change,\r\nalors tout est recalculé.\r\n\r\nC'est une approche intéressante pour déclarer un layout, mais dans les faits\r\ntous les exemples qu'il a résolu avec GSS pouvaient être résolu en CSS pur,\r\npour peu qu'on maitrise assez le langage. En l'état, une implémentation en\r\nJavascript de GSS dans le navigateur me parait bien trop peu performant\r\n(nombreux calculs, repaints et entremelage thread Javascript/GPU/rendering)\r\npour être utilisé en production.\r\n\r\nAu final, l'idée est intéressante, et si cette syntaxe alternative était\r\npossible nativement, dans les browsers, elle pourrait être une alternative\r\nintéressante au CSS. Je doute qu'elle soit réellement plus simple à apprendre\r\ncela-dit. En l'état, sous forme de librairie externe, ça me semble surtout une\r\nsolution bancale à un faux problème.\r\n\r\n### Developers in tech\r\n\r\nJean-loup Karst, de breaz.io nous a parlé des technos les plus utilisées\r\naujourd'hui par les startups parisiennes. Je vous renvoie au CR des HumanTalks\r\nd'Octobre où il a donné sensiblement la même présentation.\r\n\r\n### Bitcoin in the browser\r\n\r\nExcellet\r\n\r\nBitcoin\r\nInternet contient du web, de smails, des ftp, etc. Les blockchain c'est le même\r\nprincipes mais pour le moment on n'a que de sbitcoins dessus. Ca permet de\r\nconstruire sdes sustemes décentralisés.\r\nGrosses problematiques de scurité, par reputation, etc.\r\n\r\n\r\nblockchain est une suite de sblocs. chaque bloc possede un hash de toutes les\r\ntransactions précédente. donc on peut pas changer la liste sans changer le hash\r\net donc invalider toute la suite. on regade le dernier block pour voir\r\nl'historique\r\n\r\nwallet clé publique et clé privé\r\nclé public est comme un RIB, public, on peut la donner à tout le monde. On la\r\ndonne à tout le monde.\r\nclé privé permet d'envoyer de l'argent. ne jamais la partager et la cacher\r\ncontre tout\r\n\r\nactuelllement en CB, on autirise le commercan à prelever les sous. Avec\r\nbitcoin, on pousse des sous vers quelqu'un d'autres.\r\n\r\nles bitcoins sont immuales il appartiennent à quelqu'un ou quelqu'un d'autres.\r\nComme des terrain, il n'a pas bougé quand on le donne, mais il appartient\r\nà quelqu'un d'autre.\r\nSur une transaction, il y a un script avec un challenge à relever pour prouver\r\nque c'est à moi. Pour prouver qu'un bitcoin m'appartient, y a deux choses\r\nà faire. On prouve qu'on peut résoudre un challenge, et on rajoute un autre\r\nchallenge pour prouver qu'il n'ay que l'autre personne qui peut les dépenser.\r\nOn utilise une clé privée pour sufner la transaction, les challenges.\r\nOn fait un challenge qui dit \"seulle la personne qui possède la clé privée qui\r\nconrrespond à cette clé publique peut le dépenser\". Mais on peut faire tous les\r\nchallenges qu'on veut (réputation, contrat à signer avec unfo, etc).\r\n\r\n\r\naptget install bitcoin. Une journée pour synchroniser la blockahin du résearU.\r\nblockahin.info pour voir sur un UI l'historique d'une adresse bitcoin.\r\n\r\nlib nommée bitcore\r\n\r\non demande une adresse au server node bitcoin.\r\n\r\n"
}